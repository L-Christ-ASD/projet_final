
- name: Vérifier l'installation de RKE2
  command: which rke2
  register: rke2_check
  ignore_errors: true

- debug:
    var: rke2_check.stdout

- name: Créer le dossier /etc/rancher/rke2 si absent
  file:
    path: /etc/rancher/rke2
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: rke2_check.rc != 0

- name: Vérifier la présence du script d’installation
  stat:
    path: /tmp/install-rke2.sh
  register: install_script

- name: Afficher le statut du script
  debug:
    var: install_script


- name: Télécharger et exécuter le script d'installation de RKE2
  shell: curl -sfL https://get.rke2.io | INSTALL_RKE2_TYPE="server" sh -

- name: Vérifier l'installation de RKE2
  command: PATH=$PATH:/usr/local/bin:/opt/rke2/bin which rke2
  register: rke2_check
  ignore_errors: true

- name: Vérifier où RKE2 est installé
  command: find / -name rke2 2>/dev/null
  register: rke2_path

- debug:
    var: rke2_path.stdout


- name: Ajouter RKE2 au PATH
  lineinfile:
    path: /etc/profile
    line: 'export PATH=$PATH:/usr/local/bin:/opt/rke2/bin'
  when: "'rke2' in rke2_path.stdout"

- name: Recharger les variables d’environnement
  shell: source /etc/profile

- name: Configurer RKE2 server
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      token: "mysecuretoken"
      tls-san:
        - "{{ ansible_host }}"
      write-kubeconfig-mode: "0644"

- name: Activer et démarrer le serveur RKE2
  systemd:
    name: rke2-server
    enabled: yes
    state: started

- name: Attendre que RKE2 soit actif
  command: systemctl is-active rke2-server
  register: rke2_status
  until: rke2_status.stdout == "active"
  retries: 10
  delay: 5

- name: Copier le kubeconfig sur le master principal (master1)
  fetch:
    src: /etc/rancher/rke2/rke2.yaml
    dest: ./kubeconfig.yaml
    flat: yes
  when: inventory_hostname == groups['masters'][0]  # Prend le premier master
